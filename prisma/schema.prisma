// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator erd {
  provider = "prisma-erd-generator"
  output = "./prisma/ERD.svg"
}

model Mattar {
  id          String    @id @default(cuid())
  message     String
  source      String
  ip          String
  userId      String
  user        User @relation(fields: [userId], references: [id], onDelete: Cascade)
  isRemattar  Boolean
  favorites   Favorite[]
  remattar    Remattar[]  @relation("Remattars")
  remattarParent Remattar[] @relation("Mattars")
  createdAt   DateTime    @default(now())
}

model Remattar {
  id              String    @id @default(cuid())
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String
  // リツイート参照元
  mattar          Mattar    @relation("Mattars", fields: [mattarId], references: [id], onDelete: Cascade)
  mattarId        String
  // リツイート
  remattar        Mattar    @relation("Remattars", fields: [remattarId], references: [id], onDelete: Cascade)
  remattarId      String
}

model Favorite {
  id              String    @id @default(cuid())
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String
  mattar          Mattar    @relation(fields: [mattarId], references: [id], onDelete: Cascade)
  mattarId        String
}

model User {
  id              String    @id
  name            String
  description     String?
  location        String?
  website         String?
  profile_picture String?
  birthday        String?
  lang            String?
  twofactor       String?
  hash            String
  salt            String
  email           String    @unique
  mattar_count    Int
  verified        Boolean
  mattars         Mattar[]
  favorites       Favorite[]
  remattars       Remattar[]
  follower        User[]    @relation("UserFollows")
  following       User[]    @relation("UserFollows") 
  createdAt       DateTime  @default(now())
}